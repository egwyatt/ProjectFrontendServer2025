{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\egwya\\\\OneDrive\\\\Documents\\\\workspace\\\\ProjectFrontendServer2025\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Category from './Category.js';\nimport Home from './Home.js';\nimport Layout from './Layout.js';\nimport NoPage from './NoPage.js';\nimport Register from './Register.js'; // Import Register component\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [uname, unameSetter] = useState(null);\n  const unameRef = useRef();\n  const pwordRef = useRef();\n  const handleLogout = () => {\n    unameSetter(null);\n  };\n\n  /*\r\n    const handleLogin = async () => {\r\n      const user = {\r\n        uname: unameRef.current.value,\r\n        pword: pwordRef.current.value\r\n      };\r\n  \r\n      const parameters = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Accept\": \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n      };\r\n  \r\n      console.log('Attempting to log in with user:', user);\r\n  \r\n      const url = `http://localhost:5001/users`;\r\n  \r\n      try {\r\n        const res = await fetch(url, parameters);\r\n  \r\n        if (!res.ok) {\r\n          throw new Error('Failed to fetch from the server');\r\n        }\r\n  \r\n        const json = await res.json();\r\n        console.log('Server response:', JSON.stringify(json));\r\n  \r\n        const u = json.users;\r\n        if (!u) {\r\n          console.log('Invalid username: does not exist');\r\n        } else if (u[0].pword !== user.pword) {\r\n          console.log('Invalid password');\r\n        } else {\r\n          console.log('Valid username and password');\r\n          unameSetter(user.uname);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error.message);\r\n      }\r\n    }\r\n    */\n\n  const handleRegister = async user => {\n    const parameters = {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    };\n    console.log('Attempting to register with user:', user);\n    const url = `http://localhost:5001/users/register`; // Assuming this is your registration endpoint\n\n    try {\n      const res = await fetch(url, parameters);\n      if (!res.ok) {\n        throw new Error('Failed to fetch from the server');\n      }\n      const json = await res.json();\n      console.log('Server response:', JSON.stringify(json));\n      if (json.success) {\n        console.log('Registration successful');\n        unameSetter(user.uname); // Automatically log in the user after registration\n      } else {\n        console.log('Registration failed:', json.message);\n      }\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            uname: uname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"contacts\",\n          element: /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NoPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: unameRef,\n        type: \"text\",\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: pwordRef,\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = '/register',\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n/*\r\nimport React, {useState, useRef} from \"react\";\r\n\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Category from './Category.js';\r\n\r\nimport Home from './Home.js';\r\n\r\nimport Login from './Login.js';\r\n\r\nimport Layout from './Layout.js';\r\n\r\nimport NoPage from './NoPage.js';\r\n\r\nimport './style.css';\r\n\r\nconst user = \"\"\r\n\r\nexport default function App() {\r\nconst [uname, unameSetter] = useState(null);\r\nconst unameRef = useRef();\r\nconst pwordRef = useRef();\r\n\r\nconst handleLogout = () => {\r\n  unameSetter(null);\r\n}\r\nconst handleLogin = () => {\r\n  let user = {};\r\n  user.uname = useRef.current.value;\r\n  user.pword = pwordRef.current.value;\r\n}\r\n\r\nlet parameters = {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(user)\r\n}\r\nconsole.log('user.uname called')\r\nlet url = `http://localhost:5001/users`;\r\nfetch (url, parameters)\r\n.then( res => res.json())\r\n.then( json => {\r\n  console.log(JSON.stringify(json))\r\n  const u = json.users;\r\n  if (!u) {\r\n    console.log('invalid uname does not exist');\r\n  }\r\n  else if (u[0].pword !== user.pword) {\r\n    console.log('invalid password');\r\n  }\r\n  else {\r\n    console.log('valid uname and password')\r\n    unameSetter (user.uname);\r\n  }\r\n})\r\n\r\n\r\n  return (\r\n\r\n    <BrowserRouter>\r\n\r\n      <Routes>\r\n\r\n        <Route path=\"/\" element={<Layout />}>\r\n\r\n          <Route index element={<Home  />} />\r\n\r\n          <Route path=\"contacts\" element={<Category  />} />\r\n\r\n          <Route path=\"*\" element={<NoPage />} />\r\n\r\n        </Route>\r\n\r\n      </Routes>\r\n\r\n    </BrowserRouter>\r\n\r\n  );\r\n\r\n}  */\n_s(App, \"xZtgSmsRNuyBv2rbScCmNHnjyRY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","BrowserRouter","Routes","Route","Category","Home","Layout","NoPage","Register","jsxDEV","_jsxDEV","App","_s","uname","unameSetter","unameRef","pwordRef","handleLogout","handleRegister","user","parameters","method","headers","body","JSON","stringify","console","log","url","res","fetch","ok","Error","json","success","message","error","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","ref","type","placeholder","onClick","handleLogin","window","location","href","_c","$RefreshReg$"],"sources":["C:/Users/egwya/OneDrive/Documents/workspace/ProjectFrontendServer2025/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Category from './Category.js';\r\nimport Home from './Home.js';\r\nimport Layout from './Layout.js';\r\nimport NoPage from './NoPage.js';\r\nimport Register from './Register.js';  // Import Register component\r\nimport './style.css';\r\n\r\nexport default function App() {\r\n  const [uname, unameSetter] = useState(null);\r\n  const unameRef = useRef();\r\n  const pwordRef = useRef();\r\n\r\n  const handleLogout = () => {\r\n    unameSetter(null);\r\n  }\r\n\r\n\r\n  \r\n/*\r\n  const handleLogin = async () => {\r\n    const user = {\r\n      uname: unameRef.current.value,\r\n      pword: pwordRef.current.value\r\n    };\r\n\r\n    const parameters = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(user)\r\n    };\r\n\r\n    console.log('Attempting to log in with user:', user);\r\n\r\n    const url = `http://localhost:5001/users`;\r\n\r\n    try {\r\n      const res = await fetch(url, parameters);\r\n\r\n      if (!res.ok) {\r\n        throw new Error('Failed to fetch from the server');\r\n      }\r\n\r\n      const json = await res.json();\r\n      console.log('Server response:', JSON.stringify(json));\r\n\r\n      const u = json.users;\r\n      if (!u) {\r\n        console.log('Invalid username: does not exist');\r\n      } else if (u[0].pword !== user.pword) {\r\n        console.log('Invalid password');\r\n      } else {\r\n        console.log('Valid username and password');\r\n        unameSetter(user.uname);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  }\r\n  */\r\n\r\n  const handleRegister = async (user) => {\r\n    const parameters = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(user)\r\n    };\r\n\r\n    console.log('Attempting to register with user:', user);\r\n\r\n    const url = `http://localhost:5001/users/register`;  // Assuming this is your registration endpoint\r\n\r\n    try {\r\n      const res = await fetch(url, parameters);\r\n\r\n      if (!res.ok) {\r\n        throw new Error('Failed to fetch from the server');\r\n      }\r\n\r\n      const json = await res.json();\r\n      console.log('Server response:', JSON.stringify(json));\r\n\r\n      if (json.success) {\r\n        console.log('Registration successful');\r\n        unameSetter(user.uname); // Automatically log in the user after registration\r\n      } else {\r\n        console.log('Registration failed:', json.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Layout />}>\r\n          <Route index element={<Home uname={uname} />} />\r\n          <Route path=\"contacts\" element={<Category />} />\r\n          <Route path=\"*\" element={<NoPage />} />\r\n          <Route path=\"register\" element={<Register handleRegister={handleRegister} />} />  {/* Register route */}\r\n        </Route>\r\n      </Routes>\r\n\r\n      {/* Login form */}\r\n      <div>\r\n        <input ref={unameRef} type=\"text\" placeholder=\"Username\" />\r\n        <input ref={pwordRef} type=\"password\" placeholder=\"Password\" />\r\n        <button onClick={handleLogin}>Login</button>\r\n        <br />\r\n        <button onClick={() => window.location.href = '/register'}>Register</button> {/* Link to register */}\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, {useState, useRef} from \"react\";\r\n\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Category from './Category.js';\r\n\r\nimport Home from './Home.js';\r\n\r\nimport Login from './Login.js';\r\n\r\nimport Layout from './Layout.js';\r\n\r\nimport NoPage from './NoPage.js';\r\n\r\nimport './style.css';\r\n\r\nconst user = \"\"\r\n\r\nexport default function App() {\r\nconst [uname, unameSetter] = useState(null);\r\nconst unameRef = useRef();\r\nconst pwordRef = useRef();\r\n\r\nconst handleLogout = () => {\r\n  unameSetter(null);\r\n}\r\nconst handleLogin = () => {\r\n  let user = {};\r\n  user.uname = useRef.current.value;\r\n  user.pword = pwordRef.current.value;\r\n}\r\n\r\nlet parameters = {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(user)\r\n}\r\nconsole.log('user.uname called')\r\nlet url = `http://localhost:5001/users`;\r\nfetch (url, parameters)\r\n.then( res => res.json())\r\n.then( json => {\r\n  console.log(JSON.stringify(json))\r\n  const u = json.users;\r\n  if (!u) {\r\n    console.log('invalid uname does not exist');\r\n  }\r\n  else if (u[0].pword !== user.pword) {\r\n    console.log('invalid password');\r\n  }\r\n  else {\r\n    console.log('valid uname and password')\r\n    unameSetter (user.uname);\r\n  }\r\n})\r\n\r\n\r\n  return (\r\n\r\n    <BrowserRouter>\r\n\r\n      <Routes>\r\n\r\n        <Route path=\"/\" element={<Layout />}>\r\n\r\n          <Route index element={<Home  />} />\r\n\r\n          <Route path=\"contacts\" element={<Category  />} />\r\n\r\n          <Route path=\"*\" element={<NoPage />} />\r\n\r\n        </Route>\r\n\r\n      </Routes>\r\n\r\n    </BrowserRouter>\r\n\r\n  );\r\n\r\n}  */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}