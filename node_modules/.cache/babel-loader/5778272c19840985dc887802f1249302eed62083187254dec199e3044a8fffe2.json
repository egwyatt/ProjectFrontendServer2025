{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\egwya\\\\OneDrive\\\\Documents\\\\workspace\\\\ProjectFrontendServer2025\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home({}) {\n  _s();\n  const [actors, setActors] = useState([]);\n  const nameRef = useRef();\n  const movieRef = useRef();\n  const handleQueryActors = () => {\n    let parameters = {\n      method: \"GET\"\n    };\n    console.log('handleQueryActors called');\n    let url = `http://localhost:5000/actors`; //localhost:5000/actors/ [GET]\n    fetch(url, parameters).then(res => res.json()).then(json => {\n      console.log(JSON.stringify(json));\n      const actorsTemp = json.actors;\n      console.log(`handleQueryActors: actors=${JSON.stringify(actorsTemp)}`);\n      setActors(actorsTemp);\n    });\n  };\n  const handleInsertActor = () => {\n    let actor = {};\n    actor.name = nameRef.current.value;\n    actor.movie = movieRef.current.value;\n    let parameters = {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(actor)\n    };\n    console.log('handleInsertActor called');\n    let url = `http://localhost:5000/actors`; //localhost:5000/actors/ [POST]\n    fetch(url, parameters).then(res => res.json()).then(json => {\n      console.log(JSON.stringify(json));\n      const affectedRows = json.actors.affectedRows;\n      console.log(`handleInsertActor: affectedRows=${affectedRows}`);\n      handleQueryActors();\n    });\n  };\n  const handleDeleteActor = id => {\n    let parameters = {\n      method: \"DELETE\"\n    };\n    console.log(`handleInsertActor ${id} called`);\n    let url = `http://localhost:5000/actors/${id}`; //localhost:5000/actors/:id [DEPETE]\n    fetch(url, parameters).then(res => res.json()).then(json => {\n      console.log(JSON.stringify(json));\n      const affectedRows = json.actors.affectedRows;\n      console.log(`handleInsertActor: affectedRows=${affectedRows}`);\n      handleQueryActors();\n    });\n  };\n  useEffect(() => {\n    handleQueryActors();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Actors List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), actors.map(actor => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [actor.id, \",\", actor.name, \",\", actor.movie, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteActor(actor.id),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, actor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: nameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Movie\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: movieRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInsertActor,\n        children: \"Insert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"CEMUAvDvEz6YX7Tc3jmJB9rvqw0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","Home","_s","actors","setActors","nameRef","movieRef","handleQueryActors","parameters","method","console","log","url","fetch","then","res","json","JSON","stringify","actorsTemp","handleInsertActor","actor","name","current","value","movie","headers","body","affectedRows","handleDeleteActor","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","ref","_c","$RefreshReg$"],"sources":["C:/Users/egwya/OneDrive/Documents/workspace/ProjectFrontendServer2025/src/Home.js"],"sourcesContent":["import {useState, useRef, useEffect} from 'react';\r\nfunction Home({}) {\r\n  const [actors, setActors] = useState([]);\r\n  const nameRef = useRef();  \r\n  const movieRef = useRef();\r\n  const handleQueryActors = () =>{\r\n    let parameters = {\r\n      method: \"GET\",\r\n    }\r\n    console.log('handleQueryActors called') \r\n    let url = `http://localhost:5000/actors`;        //localhost:5000/actors/ [GET]\r\n    fetch( url, parameters)\r\n      .then( res => res.json())\r\n      .then( json => {\r\n        console.log(JSON.stringify(json))\r\n        const actorsTemp = json.actors;\r\n        console.log(`handleQueryActors: actors=${JSON.stringify(actorsTemp)}`);\r\n        setActors(actorsTemp);\r\n      })\r\n  }\r\n  const handleInsertActor = () =>{\r\n    let actor = {};\r\n    actor.name = nameRef.current.value;\r\n    actor.movie = movieRef.current.value;\r\n    let parameters = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(actor)\r\n    }\r\n    console.log('handleInsertActor called') \r\n    let url = `http://localhost:5000/actors`;        //localhost:5000/actors/ [POST]\r\n    fetch( url, parameters)\r\n      .then( res => res.json())\r\n      .then( json => {\r\n        console.log(JSON.stringify(json))\r\n        const affectedRows = json.actors.affectedRows;\r\n        console.log(`handleInsertActor: affectedRows=${affectedRows}`);\r\n        handleQueryActors();\r\n      })\r\n  }\r\n  const handleDeleteActor = (id) =>{\r\n    let parameters = {\r\n      method: \"DELETE\"\r\n    }\r\n    console.log(`handleInsertActor ${id} called`) \r\n    let url = `http://localhost:5000/actors/${id}`;        //localhost:5000/actors/:id [DEPETE]\r\n    fetch( url, parameters)\r\n      .then( res => res.json())\r\n      .then( json => {\r\n        console.log(JSON.stringify(json))\r\n        const affectedRows = json.actors.affectedRows;\r\n        console.log(`handleInsertActor: affectedRows=${affectedRows}`);\r\n        handleQueryActors();\r\n      })\r\n  }\r\n  useEffect( () => {\r\n    handleQueryActors();\r\n  },[]);\r\n  return (\r\n    <div>\r\n      <h1>Actors List</h1>\r\n      {\r\n          actors.map( (actor) => {\r\n            return (\r\n              <div key={actor.id}>{actor.id},{actor.name},{actor.movie}\r\n              <button onClick={() => handleDeleteActor(actor.id)}>DELETE</button></div>\r\n            )\r\n          })\r\n      }\r\n      <div>Name<input type=\"text\" ref={nameRef}/></div>\r\n      <div>Movie<input type=\"text\" ref={movieRef} /></div>\r\n      <div><button onClick={handleInsertActor}>Insert</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}