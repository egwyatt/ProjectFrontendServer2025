{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\egwya\\\\OneDrive\\\\Documents\\\\workspace\\\\ProjectFrontendServer2025\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport Home from \"./Home\";\nimport Login from \"./pages/Login\";\nimport Logout from \"./pages/Logout\";\nimport Register from \"./pages/Register\";\nimport NoPage from \"./pages/NoPage\";\nimport CategoriesPage from \"./pages/CategoriesPage\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [uname, unameSetter] = useState(null); // controls the\n\n  const unameRef = useRef();\n  const pwordRef = useRef();\n  const handleLogout = () => {\n    unameSetter(null);\n  };\n  const handleLogin = () => {\n    let user = {};\n    user.uname = unameRef.current.value;\n    user.pword = pwordRef.current.value;\n    let parameters = {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    };\n    console.log('user.uname called');\n    let url = `http://localhost:5000/users`; //localhost:5001/users/ [POST]\n\n    fetch(url, parameters).then(res => res.json()).then(json => {\n      console.log(JSON.stringify(json));\n      const u = json.users;\n      if (!u) {\n        console.log('invalid uname doesnt exist');\n      } else if (u[0].pword !== user.pword) {\n        console.log('invalid password');\n      } else {\n        console.log('valid uname and password');\n        unameSetter(user.uname);\n      }\n    });\n  };\n\n  //if (!uname)\n\n  //  handleNotLoggedIn();\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            uname: uname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            uname: uname,\n            unameRef: unameRef,\n            pwordRef: pwordRef,\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"logout\",\n          element: /*#__PURE__*/_jsxDEV(Logout, {\n            uname: uname,\n            handleLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NoPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xZtgSmsRNuyBv2rbScCmNHnjyRY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","BrowserRouter","Routes","Route","Layout","Home","Login","Logout","Register","NoPage","CategoriesPage","jsxDEV","_jsxDEV","App","_s","uname","unameSetter","unameRef","pwordRef","handleLogout","handleLogin","user","current","value","pword","parameters","method","headers","body","JSON","stringify","console","log","url","fetch","then","res","json","u","users","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/egwya/OneDrive/Documents/workspace/ProjectFrontendServer2025/src/App.js"],"sourcesContent":["import React, {useState, useRef} from \"react\";\r\n\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Layout from \"./Layout\";\r\n\r\nimport Home from \"./Home\";\r\n\r\nimport Login from \"./pages/Login\";\r\n\r\nimport Logout from \"./pages/Logout\";\r\n\r\nimport Register from \"./pages/Register\";\r\n\r\nimport NoPage from \"./pages/NoPage\";\r\n\r\nimport CategoriesPage from \"./pages/CategoriesPage\"; \r\n\r\nimport './style.css';\r\n\r\nexport default function App() {\r\n\r\n  const [uname, unameSetter] = useState(null);   // controls the\r\n\r\n  const unameRef = useRef();\r\n\r\n  const pwordRef = useRef();  \r\n\r\n  const handleLogout = () => {\r\n\r\n    unameSetter(null);\r\n\r\n  }\r\n  const handleLogin = () => {\r\n\r\n    let user = {};\r\n\r\n    user.uname = unameRef.current.value;\r\n\r\n    user.pword = pwordRef.current.value;\r\n\r\n    let parameters = {\r\n\r\n      method: \"POST\",\r\n\r\n      headers: {\r\n\r\n        \"Accept\": \"application/json\",\r\n\r\n        \"Content-Type\": \"application/json\"\r\n\r\n      },\r\n\r\n      body: JSON.stringify(user)\r\n\r\n    }\r\n\r\n    console.log('user.uname called') \r\n\r\n    let url = `http://localhost:5000/users`;        //localhost:5001/users/ [POST]\r\n\r\n    fetch( url, parameters)\r\n\r\n      .then( res => res.json())\r\n\r\n      .then( json => {\r\n\r\n        console.log(JSON.stringify(json))\r\n\r\n        const u = json.users;\r\n\r\n        if (!u) {\r\n\r\n          console.log('invalid uname doesnt exist');\r\n\r\n        }\r\n\r\n        else if (u[0].pword !== user.pword) {\r\n\r\n          console.log('invalid password');\r\n\r\n        }\r\n\r\n        else {\r\n\r\n          console.log('valid uname and password');\r\n\r\n          unameSetter( user.uname);\r\n\r\n        }\r\n\r\n      })\r\n\r\n  }\r\n\r\n//if (!uname)\r\n\r\n  //  handleNotLoggedIn();\r\n\r\n\r\n  return (\r\n\r\n    <BrowserRouter>\r\n\r\n      <Routes>\r\n\r\n        <Route path=\"/\" element={<Layout />}>\r\n\r\n          <Route index element={<Home uname={uname} />} />\r\n\r\n          <Route path=\"login\" element={<Login  \r\n\r\n            uname={uname}  unameRef={unameRef} pwordRef={pwordRef} \r\n\r\n            handleLogin={handleLogin} />} />\r\n\r\n          <Route path=\"register\" element={<Register  />} />\r\n\r\n          <Route path=\"logout\" element={<Logout uname={uname} handleLogout={handleLogout} />} />\r\n\r\n          <Route path=\"*\" element={<NoPage />} />\r\n\r\n        </Route>\r\n\r\n      </Routes>\r\n\r\n    </BrowserRouter>\r\n\r\n  );\r\n\r\n}\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}