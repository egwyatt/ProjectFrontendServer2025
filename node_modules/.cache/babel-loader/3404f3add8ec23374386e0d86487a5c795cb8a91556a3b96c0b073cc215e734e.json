{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\egwya\\\\OneDrive\\\\Documents\\\\workspace\\\\ProjectFrontendServer2025\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Category from './Category.js';\nimport Home from './Home.js';\nimport Login from './Login.js';\nimport Layout from './Layout.js';\nimport NoPage from './NoPage.js';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user = \"\";\nexport default function App() {\n  _s();\n  const [uname, unameSetter] = useState(null);\n  const unameRef = useRef();\n  const pwordRef = useRef();\n  const handleLogout = () => {\n    unameSetter(null);\n  };\n  const handleLogin = () => {\n    let user = {};\n    user.uname = useRef.current.value;\n    user.pword = pwordRef.current.value;\n  };\n  let parameters = {\n    method: \"POST\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  };\n  console.log('user.uname called');\n  let URL = `http://localhost:5001/users`;\n  fetch(url, parameters).then(res => res.json()).then(json => {\n    console.log(JSON.stringify(json));\n    const u = json.users;\n    if (!u) {\n      console.log('invalid uname does not exist');\n    } else if (u[0].pword !== user.pword) {\n      console.log('invalid password');\n    } else {\n      console.log('valid uname and password');\n      unameSetter(user.uname);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"contacts\",\n          element: /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NoPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xZtgSmsRNuyBv2rbScCmNHnjyRY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","BrowserRouter","Routes","Route","Category","Home","Login","Layout","NoPage","jsxDEV","_jsxDEV","user","App","_s","uname","unameSetter","unameRef","pwordRef","handleLogout","handleLogin","current","value","pword","parameters","method","headers","body","JSON","stringify","console","log","URL","fetch","url","then","res","json","u","users","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/egwya/OneDrive/Documents/workspace/ProjectFrontendServer2025/src/App.js"],"sourcesContent":["import React, {useState, useRef} from \"react\";\r\n\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Category from './Category.js';\r\n\r\nimport Home from './Home.js';\r\n\r\nimport Login from './Login.js';\r\n\r\nimport Layout from './Layout.js';\r\n\r\nimport NoPage from './NoPage.js';\r\n\r\nimport './style.css';\r\n\r\nconst user = \"\"\r\n\r\nexport default function App() {\r\nconst [uname, unameSetter] = useState(null);\r\nconst unameRef = useRef();\r\nconst pwordRef = useRef();\r\n\r\nconst handleLogout = () => {\r\n  unameSetter(null);\r\n}\r\nconst handleLogin = () => {\r\n  let user = {};\r\n  user.uname = useRef.current.value;\r\n  user.pword = pwordRef.current.value;\r\n}\r\n\r\nlet parameters = {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(user)\r\n}\r\nconsole.log('user.uname called')\r\nlet URL = `http://localhost:5001/users`;\r\nfetch (url, parameters)\r\n.then( res => res.json())\r\n.then( json => {\r\n  console.log(JSON.stringify(json))\r\n  const u = json.users;\r\n  if (!u) {\r\n    console.log('invalid uname does not exist');\r\n  }\r\n  else if (u[0].pword !== user.pword) {\r\n    console.log('invalid password');\r\n  }\r\n  else {\r\n    console.log('valid uname and password')\r\n    unameSetter (user.uname);\r\n  }\r\n})\r\n\r\n\r\n  return (\r\n\r\n    <BrowserRouter>\r\n\r\n      <Routes>\r\n\r\n        <Route path=\"/\" element={<Layout />}>\r\n\r\n          <Route index element={<Home  />} />\r\n\r\n          <Route path=\"contacts\" element={<Category  />} />\r\n\r\n          <Route path=\"*\" element={<NoPage />} />\r\n\r\n        </Route>\r\n\r\n      </Routes>\r\n\r\n    </BrowserRouter>\r\n\r\n  );\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}